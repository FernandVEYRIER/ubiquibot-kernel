# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js project to Azure Function App - ubiquity-os

on:
  push:
    branches:
      - feat/azure
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x' # set this to the node version to use (supports 8.x, 10.x, 12.x)

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: oven-sh/setup-bun@v2

      - name: 'Resolve Project Dependencies Using Bun'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          bun install --frozen-lockfile
          bun run jest:test
          bun run build
          bun rimraf node_modules
          bun install --frozen-lockfile --production
          popd

#      - name: Generate local.settings.json
#        env:
#          GITHUB_SECRETS: ${{ toJson(secrets) }}
#        shell: pwsh
#        run: |
#          $secretsJson = $env:GITHUB_SECRETS | ConvertFrom-Json
#          $settingsObject = @{
#            IsEncrypted = $false
#            Values = @{}
#          }
#
#          # Exclude specific GitHub-related secrets
#          $excludedPrefixes = @("GITHUB_", "ACTIONS_", "AZUREAPPSERVICE_")
#
#          foreach ($secretName in $secretsJson.PSObject.Properties.Name) {
#              $include = $true
#              foreach ($prefix in $excludedPrefixes) {
#                  if ($secretName -like "$prefix*") {
#                      $include = $false
#                      break
#                  }
#              }
#
#              if ($include) {
#                  $settingsObject.Values[$secretName] = $secretsJson.$secretName
#              }
#          }
#
#          $settingsJson = $settingsObject | ConvertTo-Json -Depth 10
#          Set-Content -Path 'local.settings.json' -Value $settingsJson

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: windows-latest
    needs: build

    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FF1543FDA6074B97A548B4AFA510042F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_58410EA2C4124ABF95F7CE33E01A187E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4D4EF1EB2DF646689862334A9DE27D20 }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'ubiquity-os'
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

